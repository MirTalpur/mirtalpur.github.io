{"version":3,"file":"component---src-templates-blog-list-js-715381e1411a3b707e6e.js","mappings":"uJAEMA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,IAAAA,CAUH,OAVGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,OACI,2BACI,qBAAGC,KAAMC,KAAKC,MAAMC,MACXF,KAAKC,MAAME,OAK7B,IAVGN,CAAYO,EAAAA,WAalB,K,wJCNMC,EAASC,EAAAA,EAAAA,OACTC,EAAQD,EAAAA,EAAAA,MAEOE,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,IAAAA,CA6ElB,OA7EkBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACnBV,OAAA,WACE,IAAMW,EAAYT,KAAKC,MAAMS,KAAKC,KAAKC,aAAaT,MAC9CU,EAAQb,KAAKC,MAAMS,KAAKI,kBAAkBC,MAAMC,QAAO,SAAAC,GAAI,MAChC,SAA/BA,EAAKC,KAAKC,YAAYC,IADyC,IAEjE,EAAkCpB,KAAKC,MAAMoB,YAArCC,EAAR,EAAQA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IAFf,EAAqBG,SAGfC,EAAWJ,EAAc,GAAM,EAAI,IAAxB,UAAwCA,EAAc,GACjEK,EAAQ,UAAaL,EAAc,GAEzC,OACE,gBAAC,IAAD,CAAQM,SAAU5B,KAAKC,MAAM2B,UAC3B,2BACE,gBAAC,IAAD,CAAQzB,MAAOM,IACf,gBAAC,IAAD,MACA,sBAAIoB,MAAO,CACTC,UAAWzB,EAAO,GAClB0B,aAAc1B,EAAO,MAEtBQ,EAAMmB,KAAI,WAAWC,GAAW,IAAnBf,EAAkB,EAAlBA,KACNf,EAAQe,EAAKC,YAAYhB,OAASe,EAAKgB,OAAOhC,KACpD,OACE,uBAAKiC,IAAKjB,EAAKgB,OAAOhC,MACpB,sBAAI2B,MAAO,CACTE,aAAc1B,EAAO,KACrB+B,SAAU,aAEV,gBAAC,IAAD,CAAOjC,MAAOA,EAAOD,KAAMgB,EAAKgB,OAAOhC,QAEzC,qBAAGmC,UAAU,YAAYR,MAAK,iBACzBtB,GAAM,IADmB,CAE5BwB,aAAc1B,EAAO,KACrBiC,QAAS,WACPpB,EAAKC,YAAYoB,MACrB,uBAAKV,MAAO,CACVE,aAAc1B,EAAO,KAErB,uBAAKmC,wBAAyB,CAAEC,OAAQR,EAAQ,EAAIf,EAAKwB,QAAUxB,EAAKyB,MAAQd,MAAO,CACrFE,aAAc1B,EAAO,OAEvB,yBACE,gBAAC,KAAD,CAAMuC,GAAI1B,EAAKgB,OAAOhC,MAAtB,MAIF,sBAAI2B,MAAO,CACTC,UAAWzB,EAAO,OAK3B,KAEH,sBACEwB,MAAO,CACLS,QAAS,OACTO,SAAU,OACVC,eAAgB,gBAChBC,WAAY,SACZC,UAAW,OACXC,QAAS,KAGT1B,GACA,gBAAC,KAAD,CAAMqB,GAAIlB,EAAUwB,IAAI,QAAxB,oBAIA1B,GACA,gBAAC,KAAD,CAAMoB,GAAIjB,EAAUuB,IAAI,QAAxB,gBAOT,IA7EkB1C,CAAiBJ,EAAAA,U","sources":["webpack://mirtalpur.github.io/./src/components/Title.js","webpack://mirtalpur.github.io/./src/templates/blog-list.js"],"sourcesContent":["import React from 'react'\n\nclass Bio extends React.Component {\n  render() {\n    return (\n        <div>\n            <a href={this.props.slug}>\n                    {this.props.title}\n                </a>\n\n        </div>\n    )\n  }\n}\n\nexport default Bio\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { Helmet } from 'react-helmet'\n\nimport Title from '../components/Title'\nimport Layout from '../components/layout'\nimport Bio from '../components/Bio'\n\nimport typography from '../utils/typography'\nconst rhythm = typography.rhythm\nconst scale = typography.scale\n\nexport default class BlogList extends React.Component {\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const posts = this.props.data.allMarkdownRemark.edges.filter(item => \n      item.node.frontmatter.type !== 'page')\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? '/' : `/blog/${(currentPage - 1)}`\n    const nextPage = `/blog/${(currentPage + 1)}`\n\n    return (\n      <Layout location={this.props.location}>\n        <div>\n          <Helmet title={siteTitle} />\n          <Bio />\n          <hr style={{\n            marginTop: rhythm(2),\n            marginBottom: rhythm(2)\n          }} />\n          {posts.map(({ node }, index) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <div key={node.fields.slug}>\n                <h2 style={{\n                  marginBottom: rhythm(0.25),\n                  fontSize: '1.618rem',\n                }}>\n                  <Title title={title} slug={node.fields.slug} />\n                </h2>\n                <p className='post-meta' style={{\n                  ...scale(-1 / 5),\n                  marginBottom: rhythm(0.75),\n                  display: 'block',\n                }}>{node.frontmatter.date}</p>\n                <div style={{\n                  marginBottom: rhythm(2)\n                }}>\n                  <div dangerouslySetInnerHTML={{ __html: index > 1 ? node.excerpt : node.html }} style={{\n                    marginBottom: rhythm(0.5)\n                  }} />\n                  <p>\n                    <Link to={node.fields.slug}>\n                      ⌘\n                    </Link>\n                  </p>\n                  <hr style={{\n                    marginTop: rhythm(2)\n                  }} />\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          {!isFirst && (\n            <Link to={prevPage} rel=\"prev\">\n              ← Previous Page\n            </Link>\n          )}\n          {!isLast && (\n            <Link to={nextPage} rel=\"next\">\n              Next Page →\n            </Link>\n          )}\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          html\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            type\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Bio","render","href","this","props","slug","title","React","rhythm","typography","scale","BlogList","siteTitle","data","site","siteMetadata","posts","allMarkdownRemark","edges","filter","item","node","frontmatter","type","pageContext","currentPage","isFirst","isLast","numPages","prevPage","nextPage","location","style","marginTop","marginBottom","map","index","fields","key","fontSize","className","display","date","dangerouslySetInnerHTML","__html","excerpt","html","to","flexWrap","justifyContent","alignItems","listStyle","padding","rel"],"sourceRoot":""}